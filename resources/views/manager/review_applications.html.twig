{# =============================================================================

    Talent Cloud
    Review Applicants

============================================================================= #}

{% extends "layouts/base" %}

{% block title %}Review Applicants{% endblock %}

{% block body %}

	{% include "common/alert" %}

    {% include "common/goc" %}

    {% include "common/header" with {"header":jobs_l10n} %}

    <a id="skipLink"></a>

    {# <div
        id="review-applications"
        data-job="{{ job|json_encode() }}"
        data-applications="{{ applications|json_encode() }}"
    >
    </div> #}

    {# Static Applicant Index Mockup ======================================== #}

        <section class="applicant-review container--layout-xl">

            <div class="flex-grid gutter">

                <div class="box med-1of2 job-title-wrapper">
                    <span>Viewing Applicants for: {# Todo: Job Title #} ({# Job Classification Code #})</span>
                </div>

                <div class="box med-1of2 timer-wrapper">
                    <span><i class="fas fa-stopwatch"></i> {# Number #} Days Since Close</span>
                </div>

            </div>

            <div class="priority-alert">

                <h3><i class="fas fa-bell"></i> Temporary Priority Alert</h3>

                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse luctus fermentum lorem, vel rhoncus velit vehicula imperdiet. Integer ullamcorper iaculis justo, quis tincidunt ex vulputate ut. Vivamus molestie augue turpis, ut egestas ante aliquam id. Quisque efficitur, metus imperdiet rhoncus pharetra, velit ligula lobortis tortor, vitae imperdiet leo augue ac velit. Vivamus sollicitudin dictum est a tempus. Fusce tempus finibus elit sed lacinia.</p>

            </div>

            {# Applicant Categories
                Categories have 3 class determined states:
                    - primary (priority, veteran, and citizen candidates)
                    - secondary (non-canadians, unqualified canadians)
                    - tertiary (all candidates who have been screened out)
            #}

            <div class="applicant-category primary">

                <h3 class="heading--03"><i class="fas fa-ban"></i> {# Category Title #}</h3>

                <p>{# Category Description #}</p>

                {# Category Action
                    This section only exists for the "secondary" category, and should generate a confirmation dialogue that prompts the user to decide whether to screen ALL of the candidates in this category out or not.
                #}

                <span class="category-action">
                    <button
                        class="button--outline"
                        type="button">
                        <i class="fas fa-ban"></i> Screen All Optional Candidates Out
                    </button>
                </span>

                {# Applicant Buckets
                    There are 4 applicant buckets:
                        - [1] Priority Applicants (this bucket will not be used at first and is replaced by the "temporary priority alert outlined above.)
                        - [2] Veteran & Citzen Applicants
                        - [3] Non-Canadian Applicants
                        - [4] Unqualified Applicants (These applicants claimed to have the required essential criteria at a lower level than the job poster asked for.)
                    The larger page categories outlined earlier contain unique combinations of these buckets:
                        - 1 and 2 appear in the "primary" category
                        - 3 and 4 appear in the "secondary" category
                        - The "tertiary" category contains all 4, each displaying only the candidates that have been screened out in that bucket.
                #}

                <div class="accordion applicant-bucket">

                    {# Accordion Trigger #}

                        <button
                            aria-expanded="false"
                            class="accordion-trigger"
                            tabindex="0"
                            type="button">

                            <span class="bucket-title"><i class="fas fa-ban"></i> Step {# Number  #}: {# Bucket Title #} ({# Real-time Number of Applicants #})</span>

                            <span class="invisible">Toggle this step to view relevant applicants.</span>

                            <i class="fas fa-chevron-up"></i>

                        </button>

                    {# Accordion Content #}

                        <div
                            aria-hidden="true"
                            class="accordion-content">

                            <p>{# Bucket Description #}</p>

                            {# Applicants and Their States
                                Applicants contain 3 different points of data that can alter their state:
                                    - Their current status:
                                        - in (screened in)
                                        - out (screened out)
                                        - maybe (saved for review)
                                        - null (the manager hasn't yet taken an action on this applicant)
                                    - Whether a note has been created regarding their application:
                                        - true
                                        - false
                                    - Whether that applicant is a veteran:
                                        - true
                                        - false
                            #}

                            <form
                                class="applicant-summary"
                                data-applicant-status="in"
                                data-note-status="true"
                                data-veteran-status="true">

                                <div class="flex-grid middle gutter">

                                    <div class="box lg-1of11 applicant-status">
                                        <i class="fas fa-check-circle"></i>
                                        <i class="fas fa-exclamation-circle"></i>
                                        <i class="fas fa-question-circle"></i>
                                        <i class="fas fa-ban"></i>
                                    </div>

                                    <div class="box lg-2of11 applicant-information">
                                        <span class="name">{# Applicant Name #}</span>
                                        <a
                                            href="mailto:{# Applicant Email #}"
                                            title="Email this candidate.">
                                            {# Applicant Email #}
                                        </a>
                                        <span class="veteran-status">
                                            <img
                                                alt="The Talent Cloud veteran icon."
                                                src="/images/icon_veteran.svg">
                                            Veteran
                                        </span>
                                    </div>

                                    <div class="box lg-2of11 applicant-links">
                                        <a
                                            href="{# Link to Applicant's Application #}"
                                            title="View this applicant's application.">
                                            <i class="fas fa-file-alt"></i>View Application
                                        </a>
                                        <a
                                            href="{# Link to Applicant's Profile #}"
                                            title="View this applicant's profile.">
                                            <i class="fas fa-user"></i>View Profile
                                        </a>
                                    </div>

                                    <div class="box lg-2of11 applicant-decision">
                                        <div class="form__input-wrapper--select">
                                            <label
                                                class="form__label"
                                                for="">
                                                Decision
                                            </label>
                                            <div class="form__select-wrapper fas fa-chevron-down">
                                                <select class="form__input">
                                                    {# Decisions
                                                        A manager can select one of four options from this select element, which should then leverage React to assign the appropriate classes, update the database, AND move this applicant to the correct spot in the UI if necessary:
                                                            - "Still In"
                                                            - "Screened Out"
                                                            - "Still Thinking"
                                                            - "Not Reviewed" (This should be the default selection.)
                                                    #}
                                                </select>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="box lg-2of11 applicant-notes">
                                        {# Add a Note
                                            This button should trigger a dialogue that allows the manager to edit and save a textarea element unique to this applicant/application. This dialoue should contain a "Cancel" and "Save" button.
                                        #}
                                        <button
                                            class="button--outline create-note"
                                            type="button">
                                            + Add a Note
                                        </button>
                                        {# This button should essentially do the same thing, but shows up when there's an existing note. #}
                                        <button
                                            class="button--outline edit-note"
                                            type="button">
                                            Edit Note
                                        </button>
                                    </div>

                                    <div class="box lg-2of11 applicant-save-button">
                                        {# Save Button
                                            This button should be given a "saved" class when React is finished submitting the data. This class should then be removed when any element for this applicant has been changed, prompting the user to save again.
                                        #}
                                        <button
                                            class="button--blue light-bg"
                                            type="button">
                                            <span class="default-copy">Save</span>
                                            <span class="saved-copy">Saved</span>
                                        </button>
                                    </div>

                                </div>

                            </form>

                        </div>

                </div>

            </div>

        </section>

{% endblock %}
