version: 2 # use CircleCI 2.0

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/php:7.2-node-browsers # ...with this image as the primary container; this is where all `steps` will run
        environment:
          PGHOST: 127.0.0.1
          PGUSER: talentcloud
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: talentcloud
          POSTGRES_DB: talentcloud
    steps: # a set of executable commands
      - checkout # special step to check out source code to working directory
      - run: sudo apt update && sudo apt install zlib1g-dev
      - run: sudo docker-php-ext-install zip pgsql pdo_pgsql
      - run: sudo composer self-update
      - run: sudo cp .env.testing .env
      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v1-
      - run: composer install -n --prefer-dist
      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - restore_cache: # special step to restore the dependency cache if `package.json` does not change
          keys:
            - node-v1-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - node-v1-
      - run: npm install
      - save_cache: # special step to save the dependency cache with the `package.json` cache key template
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: sudo php artisan migrate && sudo php artisan db:seed
      - run: sudo ./vendor/bin/phpunit
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              only: feature/circleci-integration
