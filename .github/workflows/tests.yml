name: Tests

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:

  phpunit:

    runs-on: ubuntu-latest
    services:
      postgres:
         image: postgres:9.6-alpine
         options: --name=postgres
         env:
           POSTGRES_DB: testing
           POSTGRES_USER: talentcloud
           POSTGRES_PASSWORD: talentcloud
         ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - uses: shivammathur/setup-php@v2
      with:
        php-version: 7.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, bcmath, soap, intl, gd, exif, iconv, imagick
        tools: composer:v1

    - name: Copy .env
      run: cp .env.actions .env

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install dependencies
      uses: MilesChou/composer-action/7.2/install@master
      with:
        args: install --no-interaction --prefer-dist --no-progress --no-suggest

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.15.1

    - name: Install npm dependencies
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Cache Npm packages
      id: npm-cache
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage

    - name: Generate certificates
      run: make gen-certs

    - name: Create Laravel storage symlink
      run: php artisan storage:link

    - name: Setup database
      run: |
        docker exec -d postgres psql -c 'create database testing with owner talentcloud;' -U talentcloud --no-password
        php artisan migrate --seed
      env:
        DB_PORT: 5432
        DB_HOST: localhost
        DB_DATABASE: testing

    - name: Compile webpack assets
      run: npm run prod

    - name: Run PHPUnit tests
      run: vendor/bin/phpunit --coverage-clover=report/phpunit/coverage.xml --log-junit=report/phpunit/junit.phpunit.xml
      env:
        DB_PORT: 5432
        DB_HOST: localhost
        DB_DATABASE: testing

    - name: Upload reports to Codecov
      if: ${{ always() }}
      uses: codecov/codecov-action@v1
      with:
        files: report/phpunit/coverage.xml,report/phpunit/junit.phpunit.xml
        fail_ci_if_error: true

    - name: Archive Laravel logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: laravel-logs
        path: storage\logs\*.log

    - name: Send Slack notification
      uses: 8398a7/action-slack@v3
      if: failure()
      with:
        status: ${{ job.status }}
        author_name: ${{ github.actor }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  jest:

    runs-on: ubuntu-latest

    steps:
     - uses: actions/checkout@v2
     - name: Setup Node.js
       uses: actions/setup-node@v1
       with:
         node-version: 14.15.1

     - name: Cache Npm packages
       id: npm-cache
       uses: actions/cache@v2
       with:
         # npm cache files are stored in `~/.npm` on Linux/macOS
         path: ~/.npm
         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
         restore-keys: |
           ${{ runner.os }}-build-${{ env.cache-name }}-
           ${{ runner.os }}-build-
           ${{ runner.os }}-

     - name: Install npm dependencies
       run: npm install

     - name: Compile webpack assets
       run: npm run prod

     - name: Run Jest tests
       run: npm run test -- -ci

     - name: Upload reports to Codecov
       if: ${{ always() }}
       uses: codecov/codecov-action@v1
       with:
         files: report/jest/clover.xml,report/phpunit/junit.jest.xml
         fail_ci_if_error: true

     - name: Send Slack notification
       if: failure()
       uses: 8398a7/action-slack@v3
       with:
        status: ${{ job.status }}
        author_name: ${{ github.actor }}
       env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  browser:

    runs-on: ubuntu-latest
    services:
      postgres:
         image: postgres:9.6-alpine
         options: --name=postgres
         env:
           POSTGRES_DB: testing
           POSTGRES_USER: talentcloud
           POSTGRES_PASSWORD: talentcloud
         ports:
          - 5432:5432

    steps:
     - uses: actions/checkout@v2
     - uses: shivammathur/setup-php@v2
       with:
        php-version: 7.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, bcmath, soap, intl, gd, exif, iconv, imagick
        tools: composer:v1

     - name: Copy .env
       run: cp .env.actions .env

     - name: Cache Composer packages
       id: composer-cache
       uses: actions/cache@v2
       with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

     - name: Install dependencies
       if: steps.composer-cache.outputs.cache-hit != 'true'
       uses: MilesChou/composer-action/7.2/install@master
       with:
        args: install --no-interaction --prefer-dist --no-progress --no-suggest

     - name: Setup Node.js
       uses: actions/setup-node@v1
       with:
        node-version: 14.15.1

     - name: Install npm dependencies
       if: steps.npm-cache.outputs.cache-hit != 'true'
       run: npm install

     - name: Cache Npm packages
       id: npm-cache
       uses: actions/cache@v2
       with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

     - name: Generate key
       run: php artisan key:generate

     - name: Directory Permissions
       run: chmod -R 777 storage

     - name: Generate certificates
       run: make gen-certs

     - name: Create Laravel storage symlink
       run: php artisan storage:link

     - name: Setup database
       run: |
        docker exec -d postgres psql -c 'create database testing with owner talentcloud;' -U talentcloud --no-password
        php artisan migrate --seed
       env:
        DB_PORT: 5432
        DB_HOST: localhost
        DB_DATABASE: testing

     - name: Compile webpack assets
       run: npm run prod

     - name: Add talent.test to hosts file
       run: echo "127.0.0.1 talent.test" | sudo tee -a /etc/hosts

     - name: Start a web server
       run: php artisan serve --host=talent.test --port=80 &

     - name: Run browser tests
       uses: DevExpress/testcafe-action@latest
       with:
        args: "chrome:headless --hostname talent.test --allow-insecure-localhost --ignore-certificate-errors tests/Browser/*.js -u -e -q"

     - name: Send Slack notification
       if: failure()
       uses: 8398a7/action-slack@v3
       with:
        status: ${{ job.status }}
        author_name: ${{ github.actor }}
       env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
